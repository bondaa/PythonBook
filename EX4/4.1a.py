'''
Всё, как в задании 4.1. Но, если пользователь ввел адрес хоста, а не адрес сети, то надо адрес хоста преобразовать в адрес сети и вывести адрес сети и маску, как в задании 4.1.

Пример адреса сети (все биты хостовой части равны нулю):

10.0.1.0/24
190.1.0.0/16
Пример адреса хоста:

10.0.1.1/24 - хост из сети 10.0.1.0/24
10.0.5.1/30 - хост из сети 10.0.5.0/30
Если пользователь ввел адрес 10.0.1.1/24, вывод должен быть таким:

Network:
10        0         1         0
00001010  00000000  00000001  00000000

Mask:
/24
255       255       255       0
11111111  11111111  11111111  00000000
'''



ip = input('IP = ')
IP = ip.split('.')
IP[3] = IP[3][:IP[3].find('/')]

ip_binary = '{:>08b}'.format(int(IP[0])) + '{:>08b}'.format(int(IP[1])) + '{:>08b}'.format(int(IP[2])) + '{:>08b}'.format(int(IP[3]))
ip_network = ip_binary[:int(ip[ip.find('/')+1:])] + '0'*(32 - int(ip[ip.find('/')+1:]))

print('\n'+'Network')
print('{:<10}{:<10}{:<10}{:<10}'.format(int(ip_network[:8],2),int(ip_network[8:16],2),int(ip_network[16:24],2),int(ip_network[24:32],2)))
print('{:<10}{:<10}{:<10}{:<10}'.format(ip_network[:8],ip_network[8:16],ip_network[16:24],ip_network[24:32]))

mask = '1' * int(ip[ip.find('/')+1:]) + '0'*(32 - int(ip[ip.find('/')+1:]))
print('\n'+'Mask')
print(ip[ip.find('/'):])
print('{:<10}{:<10}{:<10}{:<10}'.format(int(mask[:8],2), int(mask[8:16],2),int(mask[16:24],2),int(mask[24:32],2)))
print('{:<10}{:<10}{:<10}{:<10}'.format(mask[:8], mask[8:16],mask[16:24],mask[24:32]))