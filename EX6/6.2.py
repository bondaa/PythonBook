'''
Задание 6.2

Создать скрипт, который будет обрабатывать конфигурационный файл config_sw1.txt:
имя файла передается как аргумент скрипту
Скрипт должен возвращать на стандартный поток вывода команды из переданного конфигурационного файла, исключая строки, которые начинаются с '!'.
Между строками не должно быть дополнительного символа перевода строки.
Ограничение: Все задания надо выполнять используя только пройденные темы.

Задание 6.2a

Сделать копию скрипта задания 6.2.
Дополнить скрипт:
Скрипт не должен выводить команды, в которых содержатся слова, которые указаны в списке ignore.
Ограничение: Все задания надо выполнять используя только пройденные темы.
ignore = ['duplex', 'alias', 'Current configuration']

Задание 6.2b

Дополнить скрипт из задания 6.2a:
вместо вывода на стандартный поток вывода, скрипт должен записать полученные строки в файл config_sw1_cleared.txt
При этом, должны быть отфильтрованы строки, которые содержатся в списке ignore.
Строки, которые начинаются на '!' отфильтровывать не нужно.
Ограничение: Все задания надо выполнять используя только пройденные темы.
ignore = ['duplex', 'alias', 'Current configuration']

Задание 6.2c

Переделать скрипт из задания 6.2b:
передавать как аргументы скрипту:
имя исходного файла конфигурации
имя итогового файла конфигурации
Внутри, скрипт должен отфильтровать те строки, в исходном файле конфигурации, в которых содержатся слова из списка ignore. И затем записать оставшиеся строки в итоговый файл.
Проверить работу скрипта на примере файла config_sw1.txt.
Ограничение: Все задания надо выполнять используя только пройденные темы.
ignore = ['duplex', 'alias', 'Current configuration']
'''

from sys import argv
ignore = ['duplex', 'alias', 'Current configuration']
ignore = set(ignore)

with open(argv[1], 'r') as f1, open(argv[2], 'w') as f2:
    for line in f1:
        if line[0] != '!' and set(line.split()).isdisjoint(ignore) == True:
            print(line.rstrip())
            f2.write(line)
        

